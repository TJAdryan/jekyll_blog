# azure-pipelines.yml

# This pipeline is triggered whenever changes are pushed to the 'main' branch.
trigger:
  - main

# Define the agent pool where the job will run.
pool:
  vmImage: 'ubuntu-latest'

# Define variables used throughout the pipeline.
variables:
  - group: nextvaldataBlogSecrets  # Link the variable group here
  - jekyllVersion: '4.4.1'
  - rubyVersion: '3.2' # Using '3.2' for broader compatibility
  # No need to assign GITHUB_PAT to another pipeline variable here
  # It will be directly passed as an environment variable to the bash step

jobs:
- job: BuildAndDeployJekyll
  displayName: 'Build and Deploy Jekyll Site'
  
  steps:
  # Checkout your source code from the repository.
  - checkout: self
    persistCredentials: true 

  - task: UseRubyVersion@0
    displayName: 'Setup Ruby Environment'
    inputs:
      versionSpec: '$(rubyVersion)'
      addToPath: true

  - bash: |
      gem install bundler
    displayName: 'Install Bundler'

  - bash: |
      bundle install --jobs 4 --retry 3
    displayName: 'Install Jekyll and Dependencies'

  - bash: |
      bundle exec jekyll build --config _config.yml
    displayName: 'Build Jekyll Site'

  # Publish the generated '_site' directory as a build artifact (optional, but good for archiving).
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Build Artifacts'
    inputs:
      pathToPublish: '_site' # This publishes the _site folder
      artifactName: 'jekyll-site'
      publishLocation: 'Container' 

  # Deploy the built site to GitHub Pages.
  - bash: |
      git config user.name "Azure DevOps Pipeline"
      git config user.email "azure-devops@example.com"

      git fetch origin gh-pages:gh-pages
      git checkout gh-pages
      
      git rm -rf .
      
      cp -r "_site/"* . 
      
      git add .
      git commit -m "Azure DevOps Build: Deploying Jekyll site from main branch" || true
      
      # *** CRITICAL CHANGE HERE ***
      # Use the environment variable 'GH_TOKEN_VAR' which is set in the 'env:' block below.
      # This securely passes the PAT to the bash script.
      git push "https://${GH_TOKEN_VAR}@github.com/TJAdryan/jekyll_blog.git" gh-pages
    displayName: 'Deploy to GitHub Pages'
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
    
    # This 'env' block is crucial for securely exposing your secret to THIS specific bash step.
    env:
      GH_TOKEN_VAR: $(GITHUB_PAT) # The name of your secret variable in Azure DevOps