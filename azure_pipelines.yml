# azure-pipelines.yml

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
- group: nextvaldataBlogSecrets_update
  artifactName: 'dist-blog-site'
  githubPagesBranch: 'gh-pages'

stages:
- stage: BuildBlog
  displayName: 'Build Blog'
  jobs:
  - job: BuildJob
    displayName: 'Build Site'
    steps:
    - checkout: self
      persistCredentials: true
    - task: CmdLine@2
      displayName: 'Install Jekyll Dependencies (Bundler)'
      inputs:
        script: 'bundle install'
        workingDirectory: '$(System.DefaultWorkingDirectory)'
    - task: CmdLine@2
      displayName: 'Build Jekyll Site'
      inputs:
        script: 'bundle exec jekyll build'
        workingDirectory: '$(System.DefaultWorkingDirectory)'
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Built Site Artifact'
      inputs:
        PathtoPublish: '_site'
        ArtifactName: '$(artifactName)'
        publishLocation: 'Container'

- stage: DeployToGitHubPages
  displayName: 'Deploy to GitHub Pages'
  dependsOn: BuildBlog
  condition: succeeded()
  jobs:
  - job: DeployJob
    displayName: 'Push to GitHub Pages'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - download: current
      artifact: $(artifactName)
      displayName: 'Download Built Site Artifact'
    - task: PowerShell@2
      displayName: 'Push to GitHub Pages'
      inputs:
        targetType: 'inline'
        script: |
          # Set Git user for the commit
          git config --global user.email "azure-devops@${env:BUILD_REPOSITORY_NAME}.com"
          git config --global user.name "Azure DevOps CD Pipeline"

          # Define the GitHub Pages branch
          $gitHubPagesBranch = "$(githubPagesBranch)"

          # Define the artifact directory
          $artifactDir = "$(Pipeline.Workspace)/$(artifactName)"

          # Checkout the gh-pages branch
          git checkout $gitHubPagesBranch

          # Remove all existing files (except .git folder) to ensure a clean deploy.
          Write-Host "Cleaning existing files in $(Get-Location)"
          Get-ChildItem -Path . -Exclude ".git" -Recurse -Force | ForEach-Object {
              Remove-Item -LiteralPath $_.FullName -Recurse -Force
          }

          # Copy the newly built site files from the artifact download directory
          Write-Host "Copying built site from $artifactDir to $(Get-Location)"
          Copy-Item -Path "$artifactDir/*" -Destination "." -Recurse -Force

          # Add all changes, commit, and push to the GitHub Pages branch
          git add .
          git commit -m "Azure DevOps CD: Deployed new blog content - $(Build.BuildId) [skip ci]" -ErrorAction SilentlyContinue

          Write-Host "Pushing changes to GitHub Pages branch $gitHubPagesBranch"
          git push origin $gitHubPagesBranch
        workingDirectory: '$(System.DefaultWorkingDirectory)'
      env:
        GITHUB_PAT: $(GITHUB_PAT)
        ARTIFACTNAME: $(artifactName)
        GITHUBPAGESBRANCH: $(githubPagesBranch)
        BUILD_REPOSITORY_NAME: $(Build.Repository.Name)
        BUILD_BUILDID: $(Build.BuildId)
        PIPELINE_WORKSPACE: $(Pipeline.Workspace)