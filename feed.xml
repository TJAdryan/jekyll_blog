

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://nextvaldata.com/</id>
  <title>NextValData</title>
  <subtitle>This is the place where I try to document and improve my understanding of the things I am working on.  I am putting a lot of emphasis on try here. </subtitle>
  <updated>2025-08-13T14:10:05-04:00</updated>
  <author>
    <name>Dominick Ryan</name>
    <uri>https://nextvaldata.com/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="https://nextvaldata.com/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="en"
    href="https://nextvaldata.com/"/>
  <generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator>
  <rights> © 2025 Dominick Ryan </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>HL7 FHIR and Healthcare Data Exchange</title>
    <link href="https://nextvaldata.com/healthcare%20technology/data%20integration/interoperability/2025/08/10/HL7-FHIR-and-Healthcare-Data-Exchange.html" rel="alternate" type="text/html" title="HL7 FHIR and Healthcare Data Exchange" />
    <published>2025-08-10T12:00:00-04:00</published>
  
    <updated>2025-08-10T12:00:00-04:00</updated>
  
    <id>https://nextvaldata.com/healthcare%20technology/data%20integration/interoperability/2025/08/10/HL7-FHIR-and-Healthcare-Data-Exchange.html</id>
    <content type="text/html" src="https://nextvaldata.com/healthcare%20technology/data%20integration/interoperability/2025/08/10/HL7-FHIR-and-Healthcare-Data-Exchange.html" />
    <author>
      <name>Dominick Ryan</name>
    </author>

  
    
    <category term="Healthcare Technology" />
    
    <category term="Data Integration" />
    
    <category term="Interoperability" />
    
  

  <summary>In Our country’s healthcare landscape, the drive for seamless data exchange through standards like HL7 (Health Level Seven) and the modern FHIR (Fast Healthcare Interoperability Resources) is undeniable. The technical promise is one of efficiency and improved communication between healthcare providers and insurers. However, a pragmatic view acknowledges the dual nature of these powerful tools. ...</summary>

  </entry>

  
  <entry>
    <title>Taking the Small Wins: How Incremental Improvements Cut My API Call Times from 70 to 45 Minutes</title>
    <link href="https://nextvaldata.com/python/performance/apis/dataengineering/orjson/optimization/2025/07/19/Taking-the-Small-Wins.html" rel="alternate" type="text/html" title="Taking the Small Wins: How Incremental Improvements Cut My API Call Times from 70 to 45 Minutes" />
    <published>2025-07-19T12:00:00-04:00</published>
  
    <updated>2025-07-19T12:00:00-04:00</updated>
  
    <id>https://nextvaldata.com/python/performance/apis/dataengineering/orjson/optimization/2025/07/19/Taking-the-Small-Wins.html</id>
    <content type="text/html" src="https://nextvaldata.com/python/performance/apis/dataengineering/orjson/optimization/2025/07/19/Taking-the-Small-Wins.html" />
    <author>
      <name>Dominick Ryan</name>
    </author>

  
    
    <category term="Python" />
    
    <category term="Performance" />
    
    <category term="APIs" />
    
    <category term="DataEngineering" />
    
    <category term="orjson" />
    
    <category term="Optimization" />
    
  

  <summary>As someone who looks back at their own code and sees a mix of pride and regret, I am often torn between the desire to improve what is there and the fear of breaking something that already works. I am sure this is a common feeling, and not just something I suffer from (right?). However, sometimes there are opportunities to make small, incremental improvements that can lead to significant perform...</summary>

  </entry>

  
  <entry>
    <title>Building Data Pipelines with Dagster: Practical</title>
    <link href="https://nextvaldata.com/data%20engineering/python/orchestration/2025/06/29/Better-Pipelines-with-Dagster.html" rel="alternate" type="text/html" title="Building Data Pipelines with Dagster: Practical" />
    <published>2025-06-29T00:00:00-04:00</published>
  
    <updated>2025-06-29T00:00:00-04:00</updated>
  
    <id>https://nextvaldata.com/data%20engineering/python/orchestration/2025/06/29/Better-Pipelines-with-Dagster.html</id>
    <content type="text/html" src="https://nextvaldata.com/data%20engineering/python/orchestration/2025/06/29/Better-Pipelines-with-Dagster.html" />
    <author>
      <name>Dominick Ryan</name>
    </author>

  
    
    <category term="Data Engineering" />
    
    <category term="Python" />
    
    <category term="Orchestration" />
    
  

  <summary>I am always looking for ways to improve my data pipelines, and Dagster has been really good to me so far.  I am definitely planning on diving further into it in the future but my initial experiences have been favorable.  Of course, I ran into a a few issues.  But mostly I was able to get things up and running, without too much trouble, and get value from using it right away.  I tried to keep it...</summary>

  </entry>

  
  <entry>
    <title>Bring me the Data</title>
    <link href="https://nextvaldata.com/data%20engineering/python/api/2025/06/14/Bring-me-the-Data.html" rel="alternate" type="text/html" title="Bring me the Data" />
    <published>2025-06-14T12:00:00-04:00</published>
  
    <updated>2025-06-14T12:00:00-04:00</updated>
  
    <id>https://nextvaldata.com/data%20engineering/python/api/2025/06/14/Bring-me-the-Data.html</id>
    <content type="text/html" src="https://nextvaldata.com/data%20engineering/python/api/2025/06/14/Bring-me-the-Data.html" />
    <author>
      <name>Dominick Ryan</name>
    </author>

  
    
    <category term="Data Engineering" />
    
    <category term="Python" />
    
    <category term="API" />
    
  

  <summary>taking it personally.  NYC Restaurant Inspections Data Pull  When I was making the DuckDB posts, I wanted to include some code to show how to pull the data from the NYC Open Data portal. In the interest of keeping it simple, I just showed how to download the data.  Here’s a separate post that provides a simple way to pull the data programmatically, if you haven’t accessed the NYC Open Data port...</summary>

  </entry>

  
  <entry>
    <title>DuckDB - Diners, Drives, and Databases Part II</title>
    <link href="https://nextvaldata.com/data%20engineering/python/2025/06/08/DuckDB-Diners-Drives-and-Databases-PartII.html" rel="alternate" type="text/html" title="DuckDB - Diners, Drives, and Databases Part II" />
    <published>2025-06-08T00:00:00-04:00</published>
  
    <updated>2025-06-08T00:00:00-04:00</updated>
  
    <id>https://nextvaldata.com/data%20engineering/python/2025/06/08/DuckDB-Diners-Drives-and-Databases-PartII.html</id>
    <content type="text/html" src="https://nextvaldata.com/data%20engineering/python/2025/06/08/DuckDB-Diners-Drives-and-Databases-PartII.html" />
    <author>
      <name>Dominick Ryan</name>
    </author>

  
    
    <category term="Data Engineering" />
    
    <category term="Python" />
    
  

  <summary>Hoping for an A.  In Part I , we got our feet wet by performing initial data explorations on the NYC restaurant inspection dataset directly from a CSV file. We saw how DuckDB allows for quick insights without full data loading into memory.  I felt like I didn’t get to cover everything I wanted to touch in the last post so here I will focus on some of the other capabilities namely as a lightweig...</summary>

  </entry>

</feed>


